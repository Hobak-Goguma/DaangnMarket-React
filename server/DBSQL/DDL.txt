-- 2020.06.28
-- 외래키 체크 끄기 (삭제할 때 오류 뜸)
SET foreign_key_checks = 0;
-- 멤버
DROP TABLE IF EXISTS `daangn`.`member` RESTRICT;

-- 제품
DROP TABLE IF EXISTS `daangn`.`product` RESTRICT;

-- 메너온도
DROP TABLE IF EXISTS `daangn`.`manner` RESTRICT;

-- 구매자후기
DROP TABLE IF EXISTS `daangn`.`shopper_review` RESTRICT;

-- 로그
DROP TABLE IF EXISTS `daangn`.`log` RESTRICT;

-- 판매자후기
DROP TABLE IF EXISTS `daangn`.`seller_review` RESTRICT;

-- 실거래
DROP TABLE IF EXISTS `daangn`.`real_deal` RESTRICT;

-- 업체
DROP TABLE IF EXISTS `daangn`.`company` RESTRICT;

-- 찜목록
DROP TABLE IF EXISTS `daangn`.`wishlist` RESTRICT;

-- 매너온도_리뷰어
DROP TABLE IF EXISTS `daangn`.`manner_reviewer` RESTRICT;

-- 평가
DROP TABLE IF EXISTS `daangn`.`rate` RESTRICT;

-- 판평관계
DROP TABLE IF EXISTS `daangn`.`seller_rate` RESTRICT;

-- 구평관계
DROP TABLE IF EXISTS `daangn`.`shopper_rate` RESTRICT;

-- 멤버판매자
DROP TABLE IF EXISTS `daangn`.`member_seller` RESTRICT;

-- 멤버구매자
DROP TABLE IF EXISTS `daangn`.`member_shopper` RESTRICT;

-- 매너온도로그
DROP TABLE IF EXISTS `daangn`.`manner_log` RESTRICT;

-- 주소
DROP TABLE IF EXISTS `daangn`.`memberaddr` RESTRICT;

-- 멤버
CREATE TABLE `daangn`.`member` (
	`id_member` INT          NOT NULL COMMENT '멤버 키', -- 멤버 키
	`name`      VARCHAR(30)  NOT NULL COMMENT '이름', -- 이름
	`user_id`   VARCHAR(30)  NOT NULL COMMENT '아이디', -- 아이디
	`user_pw`   VARCHAR(300) NOT NULL COMMENT '비밀번호', -- 비밀번호
	`nick_name` VARCHAR(30)  NOT NULL COMMENT '닉네임', -- 닉네임
	`tel`       VARCHAR(20)  NOT NULL COMMENT '전화번호', -- 전화번호
	`birth`     DATE         NOT NULL COMMENT '생년월일', -- 생년월일
	`email`     VARCHAR(30)  NOT NULL COMMENT '이메일', -- 이메일
	`gender`    VARCHAR(6)   NOT NULL COMMENT '성별', -- 성별
	`cdate`     DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일', -- 생성일
	`udate`     DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '수정일', -- 수정일
	`last_date` DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최후접속', -- 최후접속
	`img`       VARCHAR(60)  NULL     COMMENT '프로필 사진' -- 프로필 사진
)
COMMENT '멤버';

-- 멤버
ALTER TABLE `daangn`.`member`
	ADD CONSTRAINT `PK_member` -- 멤버 기본키
		PRIMARY KEY (
			`id_member` -- 멤버 키
		);

-- 멤버 유니크 인덱스
CREATE UNIQUE INDEX `UIX_member`
	ON `daangn`.`member` ( -- 멤버
		`user_id` ASC -- 아이디
	);

ALTER TABLE `daangn`.`member`
	MODIFY COLUMN `id_member` INT NOT NULL AUTO_INCREMENT COMMENT '멤버 키';

-- 제품
CREATE TABLE `daangn`.`product` (
	`id_product` INT           NOT NULL COMMENT '제품키', -- 제품키
	`id_member`  INT           NOT NULL COMMENT '멤버 키', -- 멤버 키
	`name`       VARCHAR(100)  NOT NULL COMMENT '제품 이름', -- 제품 이름
	`price`      INT           NOT NULL COMMENT '제품 가격', -- 제품 가격
	`info`       VARCHAR(3000) NOT NULL COMMENT '제품 설명', -- 제품 설명
	`category`   VARCHAR(15)   NULL     COMMENT '카테고리', -- 카테고리
	`img`        VARCHAR(2000) NULL     COMMENT '제품 사진', -- 제품 사진
	`views`      INT           NOT NULL DEFAULT 0 COMMENT '조회수', -- 조회수
	`state`      VARCHAR(10)   NOT NULL DEFAULT '판매중' COMMENT '상태', -- 상태
	`addr`       VARCHAR(200)  NOT NULL COMMENT '제품주소', -- 제품주소
	`cdate`      DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일', -- 생성일
	`udate`      DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '수정일' -- 수정일
)
COMMENT '제품';

-- 제품
ALTER TABLE `daangn`.`product`
	ADD CONSTRAINT `PK_product` -- 제품 기본키
		PRIMARY KEY (
			`id_product` -- 제품키
		);

ALTER TABLE `daangn`.`product`
	MODIFY COLUMN `id_product` INT NOT NULL AUTO_INCREMENT COMMENT '제품키';

-- 메너온도
CREATE TABLE `daangn`.`manner` (
	`id_manner` INT      NOT NULL COMMENT '매너 키', -- 매너 키
	`id_member` INT      NOT NULL COMMENT '피평가자', -- 피평가자
	`score`     FLOAT    NOT NULL COMMENT '점수', -- 점수
	`cdate`     DATETIME NOT NULL COMMENT '생성일', -- 생성일
	`udate`     DATETIME NOT NULL COMMENT '수정일' -- 수정일
)
COMMENT '메너온도';

-- 메너온도
ALTER TABLE `daangn`.`manner`
	ADD CONSTRAINT `PK_manner` -- 메너온도 기본키
		PRIMARY KEY (
			`id_manner` -- 매너 키
		);

ALTER TABLE `daangn`.`manner`
	MODIFY COLUMN `id_manner` INT NOT NULL AUTO_INCREMENT COMMENT '매너 키';

-- 구매자후기
CREATE TABLE `daangn`.`shopper_review` (
	`id_review_shopper` INT          NOT NULL COMMENT '리뷰 키', -- 리뷰 키
	`id_real_deal`      INT          NOT NULL COMMENT '거래키', -- 거래키
	`content`           VARCHAR(100) NOT NULL COMMENT '내용', -- 내용
	`cdate`             DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일' -- 생성일
)
COMMENT '구매자후기';

-- 구매자후기
ALTER TABLE `daangn`.`shopper_review`
	ADD CONSTRAINT `PK_shopper_review` -- 구매자후기 기본키
		PRIMARY KEY (
			`id_review_shopper` -- 리뷰 키
		);

ALTER TABLE `daangn`.`shopper_review`
	MODIFY COLUMN `id_review_shopper` INT NOT NULL AUTO_INCREMENT COMMENT '리뷰 키';

-- 로그
CREATE TABLE `daangn`.`log` (
	`id_log`    INT         NOT NULL COMMENT '로그 키', -- 로그 키
	`id_member` INT         NOT NULL COMMENT '멤버 키', -- 멤버 키
	`search`    VARCHAR(60) NOT NULL COMMENT '검색 내용', -- 검색 내용
	`cdate`     DATETIME    NOT NULL COMMENT '생성일' -- 생성일
)
COMMENT '로그';

-- 로그
ALTER TABLE `daangn`.`log`
	ADD CONSTRAINT `PK_log` -- 로그 기본키
		PRIMARY KEY (
			`id_log` -- 로그 키
		);

ALTER TABLE `daangn`.`log`
	MODIFY COLUMN `id_log` INT NOT NULL AUTO_INCREMENT COMMENT '로그 키';

-- 판매자후기
CREATE TABLE `daangn`.`seller_review` (
	`id_review_seller` INT          NOT NULL COMMENT '리뷰 키', -- 리뷰 키
	`id_seller`        INT          NOT NULL COMMENT '판매자', -- 판매자
	`content`          VARCHAR(100) NOT NULL COMMENT '내용', -- 내용
	`cdate`            DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일' -- 생성일
)
COMMENT '판매자후기';

-- 판매자후기
ALTER TABLE `daangn`.`seller_review`
	ADD CONSTRAINT `PK_seller_review` -- 판매자후기 기본키
		PRIMARY KEY (
			`id_review_seller` -- 리뷰 키
		);

ALTER TABLE `daangn`.`seller_review`
	MODIFY COLUMN `id_review_seller` INT NOT NULL AUTO_INCREMENT COMMENT '리뷰 키';

-- 실거래
CREATE TABLE `daangn`.`real_deal` (
	`id_real_deal`     INT NOT NULL COMMENT '거래키', -- 거래키
	`id_review_seller` INT NOT NULL COMMENT '리뷰 키', -- 리뷰 키
	`id_shopper`       INT NOT NULL COMMENT '구매자', -- 구매자
	`id_product`       INT NOT NULL COMMENT '제품키' -- 제품키
)
COMMENT '실거래';

-- 실거래
ALTER TABLE `daangn`.`real_deal`
	ADD CONSTRAINT `PK_real_deal` -- 실거래 기본키
		PRIMARY KEY (
			`id_real_deal` -- 거래키
		);

ALTER TABLE `daangn`.`real_deal`
	MODIFY COLUMN `id_real_deal` INT NOT NULL AUTO_INCREMENT COMMENT '거래키';

-- 업체
CREATE TABLE `daangn`.`company` (
	`id_company` INT           NOT NULL COMMENT '업체 키', -- 업체 키
	`id_member`  INT           NOT NULL COMMENT '멤버 키', -- 멤버 키
	`name`       VARCHAR(50)   NOT NULL COMMENT '업체 이름', -- 업체 이름
	`addr`       VARCHAR(200)  NOT NULL COMMENT '업체 위치', -- 업체 위치
	`tel`        VARCHAR(20)   NULL     COMMENT '업체 번호', -- 업체 번호
	`info`       VARCHAR(3000) NULL     COMMENT '업체 소개', -- 업체 소개
	`category`   VARCHAR(15)   NULL     COMMENT '카테고리', -- 카테고리
	`img`        VARCHAR(2000) NULL     COMMENT '업체 사진', -- 업체 사진
	`cdate`      DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성일', -- 생성일
	`udate`      DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '수정일' -- 수정일
)
COMMENT '업체';

-- 업체
ALTER TABLE `daangn`.`company`
	ADD CONSTRAINT `PK_company` -- 업체 기본키
		PRIMARY KEY (
			`id_company` -- 업체 키
		);

ALTER TABLE `daangn`.`company`
	MODIFY COLUMN `id_company` INT NOT NULL AUTO_INCREMENT COMMENT '업체 키';

-- 찜목록
CREATE TABLE `daangn`.`wishlist` (
	`id_wishlist` INT      NOT NULL COMMENT '위시키', -- 위시키
	`id_product`  INT      NOT NULL COMMENT '제품키', -- 제품키
	`id_member`   INT      NOT NULL COMMENT '멤버 키', -- 멤버 키
	`cdate`       DATETIME NOT NULL COMMENT '생성일' -- 생성일
)
COMMENT '찜목록';

-- 찜목록
ALTER TABLE `daangn`.`wishlist`
	ADD CONSTRAINT `PK_wishlist` -- 찜목록 기본키
		PRIMARY KEY (
			`id_wishlist` -- 위시키
		);

ALTER TABLE `daangn`.`wishlist`
	MODIFY COLUMN `id_wishlist` INT NOT NULL AUTO_INCREMENT COMMENT '위시키';

-- 매너온도_리뷰어
CREATE TABLE `daangn`.`manner_reviewer` (
	`id_manner_log` INT NOT NULL COMMENT '매너로그키', -- 매너로그키
	`reviewer`      INT NOT NULL COMMENT '리뷰어' -- 리뷰어
)
COMMENT '매너온도_리뷰어';

-- 평가
CREATE TABLE `daangn`.`rate` (
	`id_rate` INT         NOT NULL COMMENT '평가 키', -- 평가 키
	`field`   VARCHAR(8)  NOT NULL COMMENT '필드', -- 필드
	`detail`  VARCHAR(50) NOT NULL COMMENT '상세평가', -- 상세평가
	`score`   FLOAT       NOT NULL COMMENT '점수' -- 점수
)
COMMENT '평가';

-- 평가
ALTER TABLE `daangn`.`rate`
	ADD CONSTRAINT `PK_rate` -- 평가 기본키
		PRIMARY KEY (
			`id_rate` -- 평가 키
		);

ALTER TABLE `daangn`.`rate`
	MODIFY COLUMN `id_rate` INT NOT NULL AUTO_INCREMENT COMMENT '평가 키';

-- 판평관계
CREATE TABLE `daangn`.`seller_rate` (
	`id_review_seller` INT NOT NULL COMMENT '리뷰 키', -- 리뷰 키
	`id_rate`          INT NOT NULL COMMENT '평가 키' -- 평가 키
)
COMMENT '판평관계';

-- 구평관계
CREATE TABLE `daangn`.`shopper_rate` (
	`id_review_shopper` INT NOT NULL COMMENT '리뷰 키', -- 리뷰 키
	`id_rate`           INT NOT NULL COMMENT '평가 키' -- 평가 키
)
COMMENT '구평관계';

-- 멤버판매자
CREATE TABLE `daangn`.`member_seller` (
	`id_member`    INT NOT NULL COMMENT '멤버 키', -- 멤버 키
	`id_real_deal` INT NOT NULL COMMENT '거래키' -- 거래키
)
COMMENT '멤버판매자';

-- 멤버구매자
CREATE TABLE `daangn`.`member_shopper` (
	`id_real_deal` INT NOT NULL COMMENT '거래키' -- 거래키
)
COMMENT '멤버구매자';

-- 매너온도로그
CREATE TABLE `daangn`.`manner_log` (
	`id_manner_log` INT      NOT NULL COMMENT '매너로그키', -- 매너로그키
	`id_manner`     INT      NOT NULL COMMENT '매너 키', -- 매너 키
	`score`         FLOAT    NOT NULL COMMENT '점수', -- 점수
	`cdate`         DATETIME NOT NULL COMMENT '생성일' -- 생성일
)
COMMENT '매너온도로그';

-- 매너온도로그
ALTER TABLE `daangn`.`manner_log`
	ADD CONSTRAINT `PK_manner_log` -- 매너온도로그 기본키
		PRIMARY KEY (
			`id_manner_log` -- 매너로그키
		);

-- 주소
CREATE TABLE `daangn`.`memberaddr` (
	`id_member_addr` INT          NOT NULL COMMENT '주소키', -- 주소키
	`id_member`      INT          NOT NULL COMMENT '멤버 키', -- 멤버 키
	`addr`           VARCHAR(200) NOT NULL COMMENT '주소' -- 주소
)
COMMENT '주소';

-- 주소
ALTER TABLE `daangn`.`memberaddr`
	ADD CONSTRAINT `PK_memberaddr` -- 주소 기본키
		PRIMARY KEY (
			`id_member_addr` -- 주소키
		);

ALTER TABLE `daangn`.`memberaddr`
	MODIFY COLUMN `id_member_addr` INT NOT NULL AUTO_INCREMENT COMMENT '주소키';

-- 제품
ALTER TABLE `daangn`.`product`
	ADD CONSTRAINT `FK_member_TO_product` -- 멤버 -> 제품
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 메너온도
ALTER TABLE `daangn`.`manner`
	ADD CONSTRAINT `FK_member_TO_manner` -- 멤버 -> 메너온도
		FOREIGN KEY (
			`id_member` -- 피평가자
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 구매자후기
ALTER TABLE `daangn`.`shopper_review`
	ADD CONSTRAINT `FK_real_deal_TO_shopper_review` -- 실거래 -> 구매자후기
		FOREIGN KEY (
			`id_real_deal` -- 거래키
		)
		REFERENCES `daangn`.`real_deal` ( -- 실거래
			`id_real_deal` -- 거래키
		);

-- 로그
ALTER TABLE `daangn`.`log`
	ADD CONSTRAINT `FK_member_TO_log` -- 멤버 -> 로그
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 판매자후기
ALTER TABLE `daangn`.`seller_review`
	ADD CONSTRAINT `FK_member_TO_seller_review` -- 멤버 -> 판매자후기
		FOREIGN KEY (
			`id_seller` -- 판매자
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 실거래
ALTER TABLE `daangn`.`real_deal`
	ADD CONSTRAINT `FK_seller_review_TO_real_deal` -- 판매자후기 -> 실거래
		FOREIGN KEY (
			`id_review_seller` -- 리뷰 키
		)
		REFERENCES `daangn`.`seller_review` ( -- 판매자후기
			`id_review_seller` -- 리뷰 키
		);

-- 실거래
ALTER TABLE `daangn`.`real_deal`
	ADD CONSTRAINT `FK_member_TO_real_deal` -- 멤버 -> 실거래
		FOREIGN KEY (
			`id_shopper` -- 구매자
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 실거래
ALTER TABLE `daangn`.`real_deal`
	ADD CONSTRAINT `FK_product_TO_real_deal` -- 제품 -> 실거래
		FOREIGN KEY (
			`id_product` -- 제품키
		)
		REFERENCES `daangn`.`product` ( -- 제품
			`id_product` -- 제품키
		);

-- 업체
ALTER TABLE `daangn`.`company`
	ADD CONSTRAINT `FK_member_TO_company` -- 멤버 -> 업체
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 찜목록
ALTER TABLE `daangn`.`wishlist`
	ADD CONSTRAINT `FK_product_TO_wishlist` -- 제품 -> 찜목록
		FOREIGN KEY (
			`id_product` -- 제품키
		)
		REFERENCES `daangn`.`product` ( -- 제품
			`id_product` -- 제품키
		);

-- 찜목록
ALTER TABLE `daangn`.`wishlist`
	ADD CONSTRAINT `FK_member_TO_wishlist` -- 멤버 -> 찜목록
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 매너온도_리뷰어
ALTER TABLE `daangn`.`manner_reviewer`
	ADD CONSTRAINT `FK_member_TO_manner_reviewer` -- 멤버 -> 매너온도_리뷰어
		FOREIGN KEY (
			`reviewer` -- 리뷰어
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 매너온도_리뷰어
ALTER TABLE `daangn`.`manner_reviewer`
	ADD CONSTRAINT `FK_manner_log_TO_manner_reviewer` -- 매너온도로그 -> 매너온도_리뷰어
		FOREIGN KEY (
			`id_manner_log` -- 매너로그키
		)
		REFERENCES `daangn`.`manner_log` ( -- 매너온도로그
			`id_manner_log` -- 매너로그키
		);

-- 판평관계
ALTER TABLE `daangn`.`seller_rate`
	ADD CONSTRAINT `FK_seller_review_TO_seller_rate` -- 판매자후기 -> 판평관계
		FOREIGN KEY (
			`id_review_seller` -- 리뷰 키
		)
		REFERENCES `daangn`.`seller_review` ( -- 판매자후기
			`id_review_seller` -- 리뷰 키
		);

-- 판평관계
ALTER TABLE `daangn`.`seller_rate`
	ADD CONSTRAINT `FK_rate_TO_seller_rate` -- 평가 -> 판평관계
		FOREIGN KEY (
			`id_rate` -- 평가 키
		)
		REFERENCES `daangn`.`rate` ( -- 평가
			`id_rate` -- 평가 키
		);

-- 구평관계
ALTER TABLE `daangn`.`shopper_rate`
	ADD CONSTRAINT `FK_shopper_review_TO_shopper_rate` -- 구매자후기 -> 구평관계
		FOREIGN KEY (
			`id_review_shopper` -- 리뷰 키
		)
		REFERENCES `daangn`.`shopper_review` ( -- 구매자후기
			`id_review_shopper` -- 리뷰 키
		);

-- 구평관계
ALTER TABLE `daangn`.`shopper_rate`
	ADD CONSTRAINT `FK_rate_TO_shopper_rate` -- 평가 -> 구평관계
		FOREIGN KEY (
			`id_rate` -- 평가 키
		)
		REFERENCES `daangn`.`rate` ( -- 평가
			`id_rate` -- 평가 키
		);

-- 멤버판매자
ALTER TABLE `daangn`.`member_seller`
	ADD CONSTRAINT `FK_member_TO_member_seller` -- 멤버 -> 멤버판매자
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);

-- 멤버판매자
ALTER TABLE `daangn`.`member_seller`
	ADD CONSTRAINT `FK_real_deal_TO_member_seller` -- 실거래 -> 멤버판매자
		FOREIGN KEY (
			`id_real_deal` -- 거래키
		)
		REFERENCES `daangn`.`real_deal` ( -- 실거래
			`id_real_deal` -- 거래키
		);

-- 멤버구매자
ALTER TABLE `daangn`.`member_shopper`
	ADD CONSTRAINT `FK_real_deal_TO_member_shopper` -- 실거래 -> 멤버구매자
		FOREIGN KEY (
			`id_real_deal` -- 거래키
		)
		REFERENCES `daangn`.`real_deal` ( -- 실거래
			`id_real_deal` -- 거래키
		);

-- 매너온도로그
ALTER TABLE `daangn`.`manner_log`
	ADD CONSTRAINT `FK_manner_TO_manner_log` -- 메너온도 -> 매너온도로그
		FOREIGN KEY (
			`id_manner` -- 매너 키
		)
		REFERENCES `daangn`.`manner` ( -- 메너온도
			`id_manner` -- 매너 키
		);

-- 주소
ALTER TABLE `daangn`.`memberaddr`
	ADD CONSTRAINT `FK_member_TO_memberaddr` -- 멤버 -> 주소
		FOREIGN KEY (
			`id_member` -- 멤버 키
		)
		REFERENCES `daangn`.`member` ( -- 멤버
			`id_member` -- 멤버 키
		);